יצירת כלי להמרת עיצובי Figma לקוד ב-Replit

אני רוצה ליצור כלי פשוט להפעלה שיכול:
1. להתחבר ל-API של Figma ולמשוך עיצוב
2. להמיר את העיצוב לקוד (React/HTML/CSS)
3. ליצור פרויקט חדש ב-Replit עם הקוד המומר

## מבנה הפרויקט
- יש ליצור אפליקציית Node.js עם Express
- ממשק משתמש פשוט (דף HTML) שמקבל קלט מהמשתמש
- מודולים נפרדים לעבודה עם Figma API ו-Replit API

## דרישות טכניות מפורטות:

### חבילות npm נדרשות:
- express: לשרת האינטרנט
- axios: לביצוע בקשות HTTP 
- dotenv: לניהול מפתחות API באופן מאובטח
- cors: לאפשר בקשות מדפדפנים

### משתני סביבה (נדרשים במשתנים הסודיים ב-Replit):
- FIGMA_ACCESS_TOKEN: מפתח API של Figma
- REPLIT_API_KEY: מפתח API של Replit

### קבצים שיש ליצור:
1. `index.js` - הקובץ הראשי של השרת
2. `figma-parser.js` - מודול להתחברות ל-Figma API ולהמרת העיצוב לקוד
3. `replit-client.js` - מודול להתחברות ל-Replit API וליצירת פרויקטים
4. `public/index.html` - ממשק משתמש פשוט

### צעדי יישום מפורטים:

1. **הקמת פרויקט בסיסי ב-Replit**:
   - יש לבחור את תבנית Node.js
   - להתקין את החבילות הנדרשות (`npm install express axios dotenv cors`)
   - להגדיר את משתני הסביבה תחת ה-Secrets בממשק של Replit

2. **יצירת שרת בסיסי**:
   - ליצור את קובץ `index.js` המגדיר שרת Express
   - להגדיר נתיב API לקבלת בקשות המרה
   - להגדיר שירות סטטי לקבצי HTML

3. **מימוש ממשק ל-Figma API**:
   - יש להשתמש ב-endpoints הבאים:
     - `GET /v1/files/:file_key` - לקבלת מידע על הקובץ
     - `GET /v1/images/:file_key` - לקבלת תמונות מהקובץ

4. **מימוש ממשק ל-Replit API**:
   - יש להשתמש ב-endpoints הבאים:
     - `POST /v1/repls` - ליצירת פרויקט חדש
     - `PUT /v1/repls/:id/files/:path` - להעלאת קבצים לפרויקט

5. **מימוש אלגוריתם המרה פשוט**:
   - להמיר את המבנה הבסיסי של העיצוב לקומפוננטות HTML או React
   - לייצר CSS מהסגנונות המוגדרים בעיצוב
   - לתמוך בטקסטים, צורות בסיסיות, ומיקום אלמנטים

6. **יצירת ממשק משתמש פשוט**:
   - טופס עם שדות הזנה ל:
     - מזהה הקובץ של Figma
     - שם הפרויקט ב-Replit
     - סוג הפרויקט (React או HTML)
   - כפתור לשליחת הבקשה
   - אזור להצגת תוצאות או שגיאות

7. **הוספת טיפול בשגיאות**:
   - לוודא שהבקשות לשני ה-APIs מטופלות כראוי
   - להציג הודעות שגיאה ברורות למשתמש